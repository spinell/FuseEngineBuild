# This is a basic workflow to help you get started with Actions

name: Build-Branch

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-gcc13:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout FuseEngine
        uses: actions/checkout@v4
        with:
          repository: spinell/FuseEngine
          ref: dev
          token: ${{ secrets.PAT }}
          submodules: recursive

      # Runs a set of commands using the runners shell
      - name: CMake Configure Debug (gcc 13)
        run: cmake --preset gcc-13-debug -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake

      - name: Build Debug (gcc 13)
        run: cmake --build build/gcc-13-debug

      - name: Run test Debug (gcc 13)
        run: ctest --test-dir build/gcc-13-debug --verbose

      - name: Install Debug (gcc 13)
        run: cmake --install build/gcc-13-debug  --prefix ./install/gcc-13-debug

      - uses: actions/upload-artifact@v4
        with:
          name: install-ubuntu-gcc-13-debug
          path: ./install/gcc-13-debug

      - run: echo "This job's status is ${{ job.status }}."

  build-gcc14:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout FuseEngine
        uses: actions/checkout@v4
        with:
          repository: spinell/FuseEngine
          ref: dev
          token: ${{ secrets.PAT }}
          submodules: recursive

      # Runs a set of commands using the runners shell
      - name: CMake Configure Debug (gcc 14)
        run: cmake --preset gcc-14-debug -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake

      - name: Build Debug (gcc 14)
        run: cmake --build build/gcc-14-debug

      - name: Run test Debug (gcc 14)
        run: ctest --test-dir build/gcc-14-debug --verbose

      - name: Install Debug (gcc 14)
        run: cmake --install build/gcc-14-debug  --prefix ./install/gcc-14-debug

      - uses: actions/upload-artifact@v4
        with:
          name: install-ubuntu-gcc-14-debug
          path: ./install/gcc-14-debug

      - name: Install Debug (gcc 14)
        run: |
          cpack --config build/gcc-14-debug/CPackConfig.cmake -G ZIP -B build/gcc-14-debug/package

      - uses: actions/upload-artifact@v4
        with:
          name: FuseEngine-0.0.1-Linux-gcc-14.zip
          path: build/gcc-14-debug/package/FuseEngine-0.0.1-Linux.zip

      - run: echo "This job's status is ${{ job.status }}."


  windows:
    name: Windows-2022-${{ matrix.buildConfig }}
    runs-on: Windows-2022
    strategy:
      matrix:
        buildConfig: [Debug, RelWithDebInfo, Release]
    env:
        BUILD_DIR: "build/ninja-multi-config"
        INSTALL_DIR: "install/ninja-multi-config"

    steps:
      # Clone the repo
      - name: Checkout FuseEngine
        uses: actions/checkout@v4
        with:
          repository: spinell/FuseEngine
          ref: dev
          token: ${{ secrets.PAT }}
          submodules: recursive

      # Install ninja
      - uses: seanmiddleditch/gha-setup-ninja@master
      - run : ninja --version

      # setup MSVC shell
      - name: Set Visual Studio Architecture
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      # Runs a set of commands using the runners shell
      - name: Running cmake configure ...
        run: cmake --preset ninja-multi-config -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_COMPILE_WARNING_AS_ERROR=OFF

      - name: Running cmake build ...
        run: cmake --build ${{env.BUILD_DIR}} --config ${{ matrix.buildConfig }}

      - name: Running tests ...
        run: ctest --test-dir ${{env.BUILD_DIR}} --build-config ${{ matrix.buildConfig }}

      - name: Running cmake install ...
        run: cmake --install ${{env.BUILD_DIR}}  --prefix ${{env.INSTALL_DIR}} --config ${{ matrix.buildConfig }}

      - uses: actions/upload-artifact@v4
        with:
          name: install-windows-${{ matrix.buildConfig }}
          path: ${{env.INSTALL_DIR}}

      - name: Running cpack
        run: |
          cpack --config ${{env.BUILD_DIR}}/CPackConfig.cmake -G ZIP -B ${{env.BUILD_DIR}}/package -C ${{ matrix.buildConfig }}

      - uses: actions/upload-artifact@v4
        with:
          name: FuseEngine-0.0.1-win64-${{ matrix.buildConfig }}.zip
          path:  ${{env.BUILD_DIR}}/package/FuseEngine-0.0.1-win64.zip

      - run: echo "This job's status is ${{ job.status }}."
