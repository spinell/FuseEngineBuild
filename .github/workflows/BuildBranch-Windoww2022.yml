################################################################################
# TOTO concurrency
################################################################################
name: Build-Branch-Windows2022
description: 'Performs a build branch on windows 2022'


on:
  workflow_dispatch:
    inputs:
      warningsAsErrors:
        description: 'Build with warnings as errors'
        required: true
        type: 'boolean'
        default: true

  pull_request:
    types:  opened
    branches: main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Windows-2022:
    name: ${{ matrix.compiler }}-${{ matrix.buildConfig }}
    runs-on: Windows-2022
    strategy:
      fail-fast: false
      matrix:
        buildConfig: [debug, relwithdebinfo, release]
        compiler:    [msvc,  msvc-clang, msvc-clang-cl]
    env:
        PRESET_NAME: x64-windows-${{ matrix.compiler }}-${{ matrix.buildConfig }}
        BUILD_DIR: "build/${{ matrix.compiler }}-${{ matrix.buildConfig }}"
        INSTALL_DIR: "install/${{ matrix.compiler }}-${{ matrix.buildConfig }}"

    steps:
      # Clone the repo
      - name: Checkout FuseEngine
        uses: actions/checkout@v4
        with:
          repository: spinell/FuseEngine
          ref: dev
          token: ${{ secrets.PAT }}
          submodules: recursive

      # setup MSVC shell
      - name: Set Visual Studio command line
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - run: ninja.exe --version
      - run: cmake.exe --version
      - run: clang.exe --version
      - name: Running cmake configure ${{ env.PRESET_NAME }} ...
        run: |
          cmake --preset ${{ env.PRESET_NAME }} `
            -B ${{ env.BUILD_DIR }} `
            -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake `
            -DCMAKE_COMPILE_WARNING_AS_ERROR=${{ github.event.inputs.warningsAsErrors }}

      - uses: ammaraskar/msvc-problem-matcher@0.3.0
      - run: cmake --build    ${{ env.BUILD_DIR }} --config       ${{ matrix.buildConfig }}
      - run: ctest --test-dir ${{ env.BUILD_DIR }} --build-config ${{ matrix.buildConfig }} --rerun-failed --output-on-failure
      - run: cmake --install  ${{ env.BUILD_DIR }} --prefix       ${{ env.INSTALL_DIR}}     --config ${{ matrix.buildConfig }}

  Windows-2025:
    name: ${{ matrix.compiler }}-${{ matrix.buildConfig }}
    runs-on: Windows-2025
    strategy:
      fail-fast: false
      matrix:
        buildConfig: [debug, relwithdebinfo, release]
        compiler:    [msvc,  msvc-clang, msvc-clang-cl]
    env:
        PRESET_NAME: x64-windows-${{ matrix.compiler }}-${{ matrix.buildConfig }}
        BUILD_DIR: "build/${{ matrix.compiler }}-${{ matrix.buildConfig }}"
        INSTALL_DIR: "install/${{ matrix.compiler }}-${{ matrix.buildConfig }}"

    steps:
      # Clone the repo
      - name: Checkout FuseEngine
        uses: actions/checkout@v4
        with:
          repository: spinell/FuseEngine
          ref: dev
          token: ${{ secrets.PAT }}
          submodules: recursive

      # setup MSVC shell
      - name: Set Visual Studio command line
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - run: ninja.exe --version
      - run: cmake.exe --version
      - run: clang.exe --version
      - name: Running cmake configure ${{ env.PRESET_NAME }} ...
        run: |
          cmake --preset ${{ env.PRESET_NAME }} `
            -B ${{ env.BUILD_DIR }} `
            -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake `
            -DCMAKE_COMPILE_WARNING_AS_ERROR=${{ github.event.inputs.warningsAsErrors }}

      - uses: ammaraskar/msvc-problem-matcher@0.3.0
      - run: cmake --build    ${{ env.BUILD_DIR }} --config       ${{ matrix.buildConfig }}
      - run: ctest --test-dir ${{ env.BUILD_DIR }} --build-config ${{ matrix.buildConfig }} --rerun-failed --output-on-failure
      - run: cmake --install  ${{ env.BUILD_DIR }} --prefix       ${{ env.INSTALL_DIR}}     --config ${{ matrix.buildConfig }}
